<?xml version="1.0" encoding="UTF-8"?>
<project>
  <!--(*
 *
 * File: OPC_UA_block_converter.xml
 *
 * IEC 61131-3 Structured Text (ST) code generated for subsystem "OPC_UA_block_converter/FB_PID_new"
 *
 * Model name                      : OPC_UA_block_converter
 * Model version                   : 1.17
 * Model creator                   : student
 * Model last modified by          : student
 * Model last modified on          : Tue Apr 01 09:01:43 2025
 * Model sample time               : 0.01s
 * Subsystem name                  : OPC_UA_block_converter/FB_PID_new
 * Subsystem sample time           : 0.01s
 * Simulink PLC Coder version      : 24.2 (R2024b) 21-Jun-2024
 * ST code generated on            : Tue Apr 01 09:02:06 2025
 *
 * Target IDE selection            : PLCopen XML
 * Test Bench included             : No
 *
 *)
-->
  <fileHeader companyName="The Mathworks, Inc." companyURL="www.mathworks.com" contentDescription="" creationDateTime="2025-04-01T09:02:06" productName="Simulink PLC Coder" productRelease="(R2024b)" productVersion="24.2"/>
  <contentHeader name="OPC_UA_block_converter">
    <coordinateInfo>
      <fbd>
        <scaling x="0" y="0"/>
      </fbd>
      <ld>
        <scaling x="0" y="0"/>
      </ld>
      <sfc>
        <scaling x="0" y="0"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="FB_PID_new" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ssMethodType">
              <type>
                <SINT/>
              </type>
            </variable>
            <variable name="fSignalReference">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="fSignalFeedback">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="fProportionalGain">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="fIntegralGain">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="bIntegralControlReset">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="bActivateIntegralControl">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="bEnable">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="bActivateDerivativeControl">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="fDerivativeGain">
              <type>
                <LREAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="fClosedLoopSignal">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="fSignalError">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="P_out">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="I_out">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="D_out">
              <type>
                <LREAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="rtb_TSamp">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="rtb_Sum5">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="rtb_Saturation">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="c_DiscreteTimeIntegrator1_D">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="UD_DSTATE">
              <type>
                <LREAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[

CASE ssMethodType OF
    0: 
        (* SystemInitialize for Atomic SubSystem: '<Root>/FB_PID_new' *)
        (* InitializeConditions for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' *)
        c_DiscreteTimeIntegrator1_D := 0.0;
        (* InitializeConditions for UnitDelay: '<S2>/UD'
         *
         * Block description for '<S2>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := 0.0;
        (* End of SystemInitialize for SubSystem: '<Root>/FB_PID_new' *)
    1: 
        (* Outputs for Atomic SubSystem: '<Root>/FB_PID_new' *)
        (* Sum: '<S1>/Sum' *)
        fSignalError := fSignalReference - fSignalFeedback;
        (* Product: '<S1>/Product' *)
        P_out := fProportionalGain * fSignalError;
        (* DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' *)

        IF bIntegralControlReset THEN 
            c_DiscreteTimeIntegrator1_D := 0.0;
        END_IF;

        (* Switch: '<S1>/Switch2' incorporates:
         *  Constant: '<S1>/Constant'
         *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' *)

        IF bActivateIntegralControl THEN 
            I_out := c_DiscreteTimeIntegrator1_D;
        ELSE 
            I_out := 0.0;
        END_IF;

        (* End of Switch: '<S1>/Switch2' *)
        

        (* SampleTimeMath: '<S2>/TSamp'
         *
         * About '<S2>/TSamp':
         *  y = u * K where K = 1 / ( w * Ts )
         *   *)
        rtb_TSamp := fDerivativeGain * 100.0;
        (* Switch: '<S1>/Switch3' incorporates:
         *  Constant: '<S1>/Constant2'
         *  Sum: '<S2>/Diff'
         *  UnitDelay: '<S2>/UD'
         *
         * Block description for '<S2>/Diff':
         *  
         *  Add in CPU
         *
         * Block description for '<S2>/UD':
         *  
         *  Store in Global RAM *)

        IF bActivateDerivativeControl THEN 
            D_out := rtb_TSamp - UD_DSTATE;
        ELSE 
            D_out := 0.0;
        END_IF;

        (* End of Switch: '<S1>/Switch3' *)
        

        (* Sum: '<S1>/Sum5' *)
        rtb_Sum5 := (P_out + I_out) + D_out;
        (* Saturate: '<S1>/Saturation' *)

        IF rtb_Sum5 > 0.5 THEN 
            rtb_Saturation := 0.5;
        ELSIF rtb_Sum5 >= -0.5 THEN 
            rtb_Saturation := rtb_Sum5;
        ELSE 
            rtb_Saturation := -0.5;
        END_IF;

        (* End of Saturate: '<S1>/Saturation' *)
        

        (* Switch: '<S1>/Switch1' *)

        IF bEnable THEN 
            (* Outport: '<Root>/fClosedLoopSignal' *)
            fClosedLoopSignal := rtb_Saturation;
        ELSE 
            (* Outport: '<Root>/fClosedLoopSignal' incorporates:
             *  Constant: '<S1>/Constant1' *)
            fClosedLoopSignal := 0.0;
        END_IF;

        (* End of Switch: '<S1>/Switch1' *)
        

        (* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' incorporates:
         *  Product: '<S1>/Divide'
         *  Product: '<S1>/Product1'
         *  Sum: '<S1>/Sum1'
         *  Sum: '<S1>/Sum3' *)
        c_DiscreteTimeIntegrator1_D := (((((rtb_Saturation - rtb_Sum5) / fProportionalGain) + fSignalError) * fIntegralGain) * 0.01) + c_DiscreteTimeIntegrator1_D;

        IF c_DiscreteTimeIntegrator1_D > 1.0 THEN 
            c_DiscreteTimeIntegrator1_D := 1.0;
        ELSIF c_DiscreteTimeIntegrator1_D < -1.0 THEN 
            c_DiscreteTimeIntegrator1_D := -1.0;
        END_IF;

        (* End of Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' *)
        

        (* Update for UnitDelay: '<S2>/UD'
         *
         * Block description for '<S2>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := rtb_TSamp;
        (* End of Outputs for SubSystem: '<Root>/FB_PID_new' *)
END_CASE;


]]></xhtml>
          </ST>
        </body>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations/>
  </instances>
</project>
