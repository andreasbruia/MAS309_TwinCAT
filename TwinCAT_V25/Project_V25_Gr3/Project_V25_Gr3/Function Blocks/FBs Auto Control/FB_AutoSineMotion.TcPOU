<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_AutoSineMotion" Id="{7aa33ba2-6f61-4e54-a151-28e681b8e51e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AutoSineMotion
VAR_INPUT 
	fPosition : LREAL; 
	bStartPosOK						: BOOL;
	bAutoEnable : BOOL; 
	// eStatus : BOOL;
    fSineReferenceSignal                  : LREAL; 
END_VAR

VAR PERSISTENT
	fProportionalGain 				: LREAL;
	fIntegralGain					: LREAL;
	fDerivateGain					: LREAL;
END_VAR

VAR_OUTPUT
	fWinchValveNormalizedInput 		: LREAL;
END_VAR
VAR
	bEnable : BOOL; // Forblir TRUE bnår og etter bStartPosOk er TRUE?
	fbPID						:FB_PID_Controller;
	fPosition_error					: LREAL;
	fProportinalGain_output			: LREAL;
	fIntegralGain_output			: LREAL;
	fDerivateGain_output			: LREAL;
	bEnableValveOutputWinch			: BOOL;	 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT(G_IO.bStartButton) THEN //Tidligere var denne koblet til bAutoEnable
	bEnable := FALSE;
	G_Engineer_HMI.bAutoSineMotionEnable := FALSE;
	fWinchValveNormalizedInput := 0.0;
ELSIF bStartPosOK AND bAutoEnable THEN
	bEnable := TRUE;
END_IF

IF bEnable THEN	
	
G_Motion_Control.fSineReferenceSignal := fSineReferenceSignal;
	
	
// Write to HMI
//PGain:
IF NOT(G_Engineer_HMI.bPenable_MOOG_write) THEN
	G_Engineer_HMI.fProportionalgain_MOOG := fProportionalGain; // SKjønner ikke helt det her
ELSE
	fProportionalGain := G_Engineer_HMI.fProportionalgain_MOOG;
END_IF

//IGain: 
IF NOT(G_Engineer_HMI.bIenable_MOOG_write) THEN
	G_Engineer_HMI.fIntegrationalgain_MOOG := fIntegralGain;
ELSE
	fIntegralGain := G_Engineer_HMI.fIntegrationalgain_MOOG;
END_IF

		
		fbPID(
	ssMethodType := BOOL_TO_SINT(bEnable),
	fSignalReference := fSineReferenceSignal,
	fSignalFeedback := fPosition,
	fProportionalGain := fProportionalGain,
	fIntegralGain := fIntegralGain,
	bActivateIntegralControl := G_Engineer_HMI.bIenable_MOOG,
	bEnable := TRUE,
	bActivateDerivativeControl := FALSE,
	fDerivativeGain := fDerivateGain,
	fClosedLoopSignal => fWinchValveNormalizedInput,
	fSignalError =>G_Motion_Control.fPosition_error_SineMotion,
	P_out => G_PID_Tuning.fProportinalGain_output_MOOG,
	I_out => G_PID_Tuning.fIntegralGain_output_MOOG,
	D_out => G_PID_Tuning.fDerivateGain_output_MOOG
	);
		
		
	
	//Make output global for plot		
		G_PID_Tuning.PID_output_MOOG := fWinchValveNormalizedInput;
		


END_IF


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>