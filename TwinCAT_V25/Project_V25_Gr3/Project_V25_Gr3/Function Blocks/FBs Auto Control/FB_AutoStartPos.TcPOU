<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_AutoStartPos" Id="{bc9cc522-7b04-40cd-ac55-3a13b0903ef0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AutoStartPos
VAR_INPUT
	bEnable 						: BOOL; 
	fPosition						: LREAL;
	fStartPosition					: LREAL;
	
	eStatus 						: BOOL; //E_Status;
	bAutoSineOff					: BOOL;
END_VAR
VAR_OUTPUT
	bStartPosOK						: BOOL;
	fWinchValveNormalizedInput 		: LREAL;
END_VAR


VAR
	fbPID							: FB_PID_Controller;
	fPosition_error					: LREAL;
	fProportinalGain_output			: LREAL;
	fIntegralGain_output			: LREAL;
	fDerivateGain_output			: LREAL;
	bEnableValveOutputWinch			: BOOL;	
	
	//Soft Start
	u								: LREAL;
	y								: LREAL;
	fTotal_distance					: LREAL;
	bAutoSineOff_prev				: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bEnable  THEN

/////Soft Start//////

(*
IF NOT(bAutoSineOff) AND bAutoSineOff_prev THEN
fTotal_distance := ABS(fStartPosition - fPosition);
END_IF

bAutoSineOff_prev := bAutoSineOff;

u := fPosition_error/fTotal_distance;

IF u > 0.5 THEN
y := 1 - ((3*u*u) - (2*u*u*u)); 
END_IF

IF u < 0.5 THEN
	y := ((3*u*u) - (2*u*u*u)); 
END_IF

IF u < 0.0 THEN
	u := 0.0;
END_IF*)


		
fbPID(
	ssMethodType := BOOL_TO_SINT(bEnable),
	fSignalReference := fStartPosition,
	fSignalFeedback := fPosition,
	fProportionalGain := G_Engineer_HMI.fPgain_MOOG,
	fIntegralGain := G_Engineer_HMI.fIgain_MOOG,
	bActivateIntegralControl := G_Engineer_HMI.bIenable_MOOG,
	bEnable := TRUE,
	bActivateDerivativeControl := FALSE,
	fDerivativeGain := 0.0,
	fClosedLoopSignal => fWinchValveNormalizedInput,
	fSignalError => G_Motion_Control.fPosition_error_StartPos,
	P_out => G_PID_Tuning.fProportinalGain_output_MOOG,
	I_out => G_PID_Tuning.fIntegralGain_output_MOOG,
	D_out => G_PID_Tuning.fDerivateGain_output_MOOG
	);
	
	
	//Make output global for plot	
	G_PID_Tuning.PID_output_MOOG := fWinchValveNormalizedInput;

	
IF ABS(G_Motion_Control.fPosition_error_StartPos) < 0.05 THEN //Tidligere denne: fPosition_error i ABS
		bStartPosOK := TRUE;
END_IF
		
ELSE
	bStartPosOK := FALSE;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>